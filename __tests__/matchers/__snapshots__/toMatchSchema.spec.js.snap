// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`toMatchSchema custom formats bcp47 it does not match 123 1`] = `
"expect(received).toMatchSchema(schema)

received
  .locale should match format \\"bcp47\\"
"
`;

exports[`toMatchSchema custom formats bcp47 it does not match EN-US 1`] = `
"expect(received).toMatchSchema(schema)

received
  .locale should match format \\"bcp47\\"
"
`;

exports[`toMatchSchema custom formats bcp47 it does not match en_US 1`] = `
"expect(received).toMatchSchema(schema)

received
  .locale should match format \\"bcp47\\"
"
`;

exports[`toMatchSchema custom formats bcp47 it does not match en-us 1`] = `
"expect(received).toMatchSchema(schema)

received
  .locale should match format \\"bcp47\\"
"
`;

exports[`toMatchSchema custom formats bcp47 it does not match enus 1`] = `
"expect(received).toMatchSchema(schema)

received
  .locale should match format \\"bcp47\\"
"
`;

exports[`toMatchSchema does not crash on circular references 1`] = `
"expect(received).toMatchSchema(schema)

received
  .hello should be string
"
`;

exports[`toMatchSchema fails for matching schema when using .not 1`] = `
"expect(received).not.toMatchSchema(schema)

Expected value not to match schema"
`;

exports[`toMatchSchema fails for missing required keys 1`] = `
"expect(received).toMatchSchema(schema)

received
  should have required property 'hello'
"
`;

exports[`toMatchSchema fails for wrong type 1`] = `
"expect(received).toMatchSchema(schema)

received
  .hello should be string
"
`;

exports[`toMatchSchema fails when additional properties are found but forbidden 1`] = `
"expect(received).toMatchSchema(schema)

received
  should NOT have additional properties, but found 'another'
"
`;

exports[`toMatchSchema fails when pattern does not match 1`] = `
"expect(received).toMatchSchema(schema)

received
  .hello should match pattern \\"[a-z]+\\"
"
`;
